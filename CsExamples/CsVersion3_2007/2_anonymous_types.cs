namespace CsExamples.CsVersion3;

public class Examples2 {

    /*
     * Anonymous types in C# provide a convenient way to encapsulate a set of read-only
     * properties into a single object without having to explicitly define a type.
     *
     * The compiler generates a name for these types, and they are primarily used for
     * local data manipulation within the scope of a method.
     *
     * Anonymous types are often used in LINQ queries to shape data into a desired format
     * for consumption or further processing.
     *
     * Read-Only Properties: The properties of an anonymous type are read-only.
     * This means once an instance of an anonymous type is created and initialized,
     * the values of its properties cannot be changed.
     *
     * Type Inference: The type of the properties of anonymous types is inferred
     * by the compiler based on the values assigned to them.
     *
     * Local Scope: Anonymous types are best used for data processing within a method.
     * They are not suited for passing data between methods or returning data
     * from methods where a specific, named type is expected.
     *
     * Compiler Generated: The names of the types are generated by the compiler
     * and are not accessible at the source code level.
     * 
     */
    
    public void Run()
    {
        //Anonymous types
        var person = new { Name = "John", Age = 30 };
    }
    
}